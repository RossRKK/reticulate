package xyz.reticulate.auth;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;

import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicBytes;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.2.0.
 */
public class ReticulateAuth extends Contract {
    private static final String BINARY = "608060405234801561001057600080fd5b5060008054600160a060020a033316600160a060020a031990911617905561149c8061003d6000396000f3006080604052600436106100c45763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631ffecafe81146100c9578063211f51f8146101355780632b68b9c614610205578063464232cb1461021a5780634a632feb1461027e578063638ed376146102f457806363c18a6d1461034d5780637a941b03146103a6578063c2d7f56114610453578063ce82eea9146104ae578063de9ac36014610556578063e1d5feb1146105f3578063f1afe04d14610690575b600080fd5b3480156100d557600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261013394369492936024939284019190819084018382808284375094975050508335600160a060020a03169450505060209091013590506106e9565b005b34801561014157600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261019094369492936024939284019190819084018382808284375094975050933594506107c59350505050565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101ca5781810151838201526020016101b2565b50505050905090810190601f1680156101f75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021157600080fd5b506101336108c7565b34801561022657600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261013394369492936024939284019190819084018382808284375094975050509235600160a060020a031693506108ee92505050565b34801561028a57600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526102e294369492936024939284019190819084018382808284375094975050509235600160a060020a03169350610ab092505050565b60408051918252519081900360200190f35b34801561030057600080fd5b506040805160206004803580820135601f8101849004840285018401909552848452610190943694929360249392840191908190840183828082843750949750610b3a9650505050505050565b34801561035957600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526102e2943694929360249392840191908190840183828082843750949750610c469650505050505050565b3480156103b257600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261043f94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497505093359450610cae9350505050565b604080519115158252519081900360200190f35b34801561045f57600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526101339436949293602493928401919081908401838280828437509497505093359450610e4d9350505050565b3480156104ba57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261013394369492936024939284019190819084018382808284375050604080516020601f818a01358b0180359182018390048302840183018552818452989b600160a060020a038b35169b909a9099940197509195509182019350915081908401838280828437509497505093359450610ede9350505050565b34801561056257600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261043f94369492936024939284019190819084018382808284375050604080516020601f818a01358b0180359182018390048302840183018552818452989b8a359b909a90999401975091955091820193509150819084018382808284375094975061104c9650505050505050565b3480156105ff57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261013394369492936024939284019190819084018382808284375050604080516020601f818a01358b0180359182018390048302840183018552818452989b8a359b909a9099940197509195509182019350915081908401838280828437509497506111e49650505050505050565b34801561069c57600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526101339436949293602493928401919081908401838280828437509497506112929650505050505050565b60006001846040518082805190602001908083835b6020831061071d5780518252601f1990920191602091820191016106fe565b51815160209384036101000a60001901801990921691161790529201948552506040805194859003820190942033600160a060020a03166000908152600180830190935294909420015492935050506003118015906107995750600160a060020a03331660009081526001808301602052604090912001548211155b156107bf57600160a060020a038316600090815260018083016020526040909120018290555b50505050565b60606001836040518082805190602001908083835b602083106107f95780518252601f1990920191602091820191016107da565b518151600019602094850361010090810a8201928316921993909316919091179092529490920196875260408051978890038201882060008b8152600291820184528290208054601f6001821615909802909501909416049485018290048202880182019052838752909450919250508301828280156108ba5780601f1061088f576101008083540402835291602001916108ba565b820191906000526020600020905b81548152906001019060200180831161089d57829003601f168201915b5050505050905092915050565b60005433600160a060020a03908116911614156108ec57600054600160a060020a0316ff5b565b60006001836040518082805190602001908083835b602083106109225780518252601f199092019160209182019101610903565b51815160209384036101000a60001901801990921691161790529201948552506040805194859003820190942033600160a060020a0316600090815260018083019093529490942001549293505050600311801590610a1357506001836040518082805190602001908083835b602083106109ae5780518252601f19909201916020918201910161098f565b51815160209384036101000a600019018019909216911617905292019485525060408051948590038201909420600160a060020a0387811660009081526001928301845286812083015433909216815287830190935294909120015492909210159150505b15610aab576001836040518082805190602001908083835b60208310610a4a5780518252601f199092019160209182019101610a2b565b51815160209384036101000a600019018019909216911617905292019485525060408051948590038201909420600160a060020a03871660009081526001909101909152928320929150610aa090508282611391565b600182016000905550505b505050565b60006001836040518082805190602001908083835b60208310610ae45780518252601f199092019160209182019101610ac5565b51815160209384036101000a600019018019909216911617905292019485525060408051948590038201909420600160a060020a0396909616600090815260019687019091529290922090930154949350505050565b60606001826040518082805190602001908083835b60208310610b6e5780518252601f199092019160209182019101610b4f565b518151600019602094850361010090810a82019283169219939093169190911790925294909201968752604080519788900382018820600160a060020a0333166000908152600191820184528290208054601f60029382161590980290950190941604948501829004820288018201905283875290945091925050830182828015610c3a5780601f10610c0f57610100808354040283529160200191610c3a565b820191906000526020600020905b815481529060010190602001808311610c1d57829003601f168201915b50505050509050919050565b60006001826040518082805190602001908083835b60208310610c7a5780518252601f199092019160209182019101610c5b565b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922054949350505050565b60006001846040518082805190602001908083835b60208310610ce25780518252601f199092019160209182019101610cc3565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205415159150610e42905057602060405190810160405280838152506001856040518082805190602001908083835b60208310610d5a5780518252601f199092019160209182019101610d3b565b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382018520955190955583850185528784526003848201529351885193946001948a94509192508291908401908083835b60208310610dd15780518252601f199092019160209182019101610db2565b51815160209384036101000a60001901801990921691161790529201948552506040805194859003820190942033600160a060020a031660009081526001909101825293909320845180519194610e2d945085935001906113d5565b50602091909101516001918201559050610e46565b5060005b9392505050565b60006001836040518082805190602001908083835b60208310610e815780518252601f199092019160209182019101610e62565b51815160209384036101000a60001901801990921691161790529201948552506040805194859003820190942033600160a060020a0316600090815260018083019093529490942001549293505060029091109050610aab575550565b60006001856040518082805190602001908083835b60208310610f125780518252601f199092019160209182019101610ef3565b51815160209384036101000a60001901801990921691161790529201948552506040805194859003820190942033600160a060020a0316600090815260018083019093529490942001549293505050600311801590610f8e5750600160a060020a03331660009081526001808301602052604090912001548211155b15611045576040805190810160405280848152602001838152506001866040518082805190602001908083835b60208310610fda5780518252601f199092019160209182019101610fbb565b51815160209384036101000a600019018019909216911617905292019485525060408051948590038201909420600160a060020a038a1660009081526001909101825293909320845180519194611036945085935001906113d5565b50602082015181600101559050505b5050505050565b60008060006001866040518082805190602001908083835b602083106110835780518252601f199092019160209182019101611064565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002016000868152602001908152602001600020915081805460018160011615610100020316600290049050845114156111d6575060005b8154600260001961010060018416150201909116048110156111cd57838181518110151561111857fe5b90602001015160f860020a900460f860020a027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168282815460018160011615610100020316600290048110151561116c57fe5b81546001161561118b5790600052602060002090602091828204019190065b9054901a60f860020a027fff0000000000000000000000000000000000000000000000000000000000000016146111c557600092506111db565b6001016110ee565b600192506111db565b600092505b50509392505050565b60006001846040518082805190602001908083835b602083106112185780518252601f1990920191602091820191016111f9565b51815160209384036101000a60001901801990921691161790529201948552506040805194859003820190942033600160a060020a03166000908152600180830190935294909420015492935050600290911090506107bf57600083815260028201602090815260409091208351611045928501906113d5565b60036001826040518082805190602001908083835b602083106112c65780518252601f1990920191602091820191016112a7565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101600033600160a060020a0316600160a060020a031681526020019081526020016000206001015410151561138e576001816040518082805190602001908083835b6020831061135c5780518252601f19909201916020918201910161133d565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092206000905550505b50565b50805460018160011615610100020316600290046000825580601f106113b7575061138e565b601f01602090049060005260206000209081019061138e9190611453565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061141657805160ff1916838001178555611443565b82800160010185558215611443579182015b82811115611443578251825591602001919060010190611428565b5061144f929150611453565b5090565b61146d91905b8082111561144f5760008155600101611459565b905600a165627a7a72305820b5533bd155e4de82ef4b8450112be0112d4dc77a74e0b636c254d9deeb11f6ab0029";

    protected ReticulateAuth(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected ReticulateAuth(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public RemoteCall<TransactionReceipt> modifyAccessLevel(String fileId, String user, BigInteger level) {
        Function function = new Function(
                "modifyAccessLevel", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId), 
                new org.web3j.abi.datatypes.Address(user), 
                new org.web3j.abi.datatypes.generated.Uint256(level)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<byte[]> getCheckSum(String fileId, BigInteger blockIndex) {
        Function function = new Function("getCheckSum", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId), 
                new org.web3j.abi.datatypes.generated.Uint256(blockIndex)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteCall<TransactionReceipt> destruct() {
        Function function = new Function(
                "destruct", 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> revokeShare(String fileId, String revokee) {
        Function function = new Function(
                "revokeShare", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId), 
                new org.web3j.abi.datatypes.Address(revokee)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getAccessLevel(String fileId, String user) {
        Function function = new Function("getAccessLevel", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId), 
                new org.web3j.abi.datatypes.Address(user)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<byte[]> getKeyForFile(String fileId) {
        Function function = new Function("getKeyForFile", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteCall<BigInteger> getFileLength(String fileId) {
        Function function = new Function("getFileLength", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> addFile(String fileId, byte[] key, BigInteger length) {
        Function function = new Function(
                "addFile", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId), 
                new org.web3j.abi.datatypes.DynamicBytes(key), 
                new org.web3j.abi.datatypes.generated.Uint256(length)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> updateFileLength(String fileId, BigInteger newLength) {
        Function function = new Function(
                "updateFileLength", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId), 
                new org.web3j.abi.datatypes.generated.Uint256(newLength)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> shareFile(String fileId, String recipient, byte[] recipientKey, BigInteger level) {
        Function function = new Function(
                "shareFile", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId), 
                new org.web3j.abi.datatypes.Address(recipient), 
                new org.web3j.abi.datatypes.DynamicBytes(recipientKey), 
                new org.web3j.abi.datatypes.generated.Uint256(level)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> compareCheckSum(String fileId, BigInteger blockIndex, byte[] checkSum) {
        Function function = new Function("compareCheckSum", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId), 
                new org.web3j.abi.datatypes.generated.Uint256(blockIndex), 
                new org.web3j.abi.datatypes.DynamicBytes(checkSum)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> updateCheckSum(String fileId, BigInteger blockIndex, byte[] checkSum) {
        Function function = new Function(
                "updateCheckSum", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId), 
                new org.web3j.abi.datatypes.generated.Uint256(blockIndex), 
                new org.web3j.abi.datatypes.DynamicBytes(checkSum)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> removeFile(String fileId) {
        Function function = new Function(
                "removeFile", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public static RemoteCall<ReticulateAuth> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(ReticulateAuth.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<ReticulateAuth> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(ReticulateAuth.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static ReticulateAuth load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new ReticulateAuth(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static ReticulateAuth load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new ReticulateAuth(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }
}
