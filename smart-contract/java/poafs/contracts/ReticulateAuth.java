package poafs.contracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.DynamicBytes;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.2.0.
 */
public class ReticulateAuth extends Contract {
    private static final String BINARY = "6060604052341561000f57600080fd5b60008054600160a060020a033316600160a060020a03199091161790556110678061003b6000396000f3006060604052600436106100985763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631ffecafe811461009d5780632b68b9c61461010057806333ae139d14610113578063464232cb146101ea5780634a632feb14610246578063638ed376146102b45780638821fa611461037c578063ce82eea91461044c578063f1afe04d146104f3575b600080fd5b34156100a857600080fd5b6100fe60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965050600160a060020a038535169460200135935061054492505050565b005b341561010b57600080fd5b6100fe610628565b341561011e57600080fd5b6100fe60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650509335935061064f92505050565b34156101f557600080fd5b6100fe60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965050509235600160a060020a031692506107a9915050565b341561025157600080fd5b6102a260046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965050509235600160a060020a0316925061097f915050565b60405190815260200160405180910390f35b34156102bf57600080fd5b61030560046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610a0e95505050505050565b60405160208082528190810183818151815260200191508051906020019080838360005b83811015610341578082015183820152602001610329565b50505050905090810190601f16801561036e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561038757600080fd5b6103cd60046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610b4495505050505050565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156104105780820151838201526020016103f8565b50505050905090810190601f16801561043d5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b341561045757600080fd5b6100fe60046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843782019150505050505091908035600160a060020a031690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505093359350610cc292505050565b34156104fe57600080fd5b6100fe60046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610e3e95505050505050565b60006001846040518082805190602001908083835b602083106105785780518252601f199092019160209182019101610559565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020600160a060020a0333166000908152600282016020526040902060010154909150600390108015906105fc5750600160a060020a0333166000908152600282016020526040902060010154829010155b1561062257600160a060020a038316600090815260028201602052604090206001018290555b50505050565b60005433600160a060020a039081169116141561064d57600054600160a060020a0316ff5b565b6040805190810160405280848152602001828152506001856040518082805190602001908083835b602083106106965780518252601f199092019160209182019101610677565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040519081900390208151819080516106de929160200190610f4a565b50602082015160019091015550604080519081016040528083815260200160038152506001856040518082805190602001908083835b602083106107335780518252601f199092019160209182019101610714565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020600160a060020a0333166000908152600290910160205260409020815181908051610796929160200190610f4a565b5060208201516001909101555050505050565b60006001836040518082805190602001908083835b602083106107dd5780518252601f1990920191602091820191016107be565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020600160a060020a0333166000908152600282016020526040902060010154909150600390108015906108de57506001836040518082805190602001908083835b602083106108705780518252601f199092019160209182019101610851565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020600160a060020a03808416600090815260029283016020908152604080832060019081015433909516845294860190915290209091015410155b1561097a576001836040518082805190602001908083835b602083106109155780518252601f1990920191602091820191016108f6565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020600160a060020a03831660009081526002909101602052604081209061096f8282610fc8565b600182016000905550505b505050565b60006001836040518082805190602001908083835b602083106109b35780518252601f199092019160209182019101610994565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020600160a060020a038316600090815260029091016020526040902060010154905092915050565b610a1661100c565b6001826040518082805190602001908083835b60208310610a485780518252601f199092019160209182019101610a29565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600201600033600160a060020a0316600160a060020a031681526020019081526020016000206000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b385780601f10610b0d57610100808354040283529160200191610b38565b820191906000526020600020905b815481529060010190602001808311610b1b57829003601f168201915b50505050509050919050565b610b4c61100c565b60006001836040518082805190602001908083835b60208310610b805780518252601f199092019160209182019101610b61565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040519081900390206001846040518082805190602001908083835b60208310610be65780518252601f199092019160209182019101610bc7565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010154818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cb25780601f10610c8757610100808354040283529160200191610cb2565b820191906000526020600020905b815481529060010190602001808311610c9557829003601f168201915b5050505050915091509150915091565b60006001856040518082805190602001908083835b60208310610cf65780518252601f199092019160209182019101610cd7565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020600160a060020a033316600090815260028201602052604090206001015490915060039010801590610d7a5750600160a060020a0333166000908152600282016020526040902060010154829010155b15610e37576040805190810160405280848152602001838152506001866040518082805190602001908083835b60208310610dc65780518252601f199092019160209182019101610da7565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020600160a060020a0386166000908152600290910160205260409020815181908051610e29929160200190610f4a565b506020820151600190910155505b5050505050565b60036001826040518082805190602001908083835b60208310610e725780518252601f199092019160209182019101610e53565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020600160a060020a03331660009081526002909101602052604090206001015410610f47576001816040518082805190602001908083835b60208310610efc5780518252601f199092019160209182019101610edd565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040519081900390206000610f3c8282610fc8565b600182016000905550505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f8b57805160ff1916838001178555610fb8565b82800160010185558215610fb8579182015b82811115610fb8578251825591602001919060010190610f9d565b50610fc492915061101e565b5090565b50805460018160011615610100020316600290046000825580601f10610fee5750610f47565b601f016020900490600052602060002090810190610f47919061101e565b60206040519081016040526000815290565b61103891905b80821115610fc45760008155600101611024565b905600a165627a7a7230582074bb35223ba7c99c69b980483a163193ba3f607865ae9fe26b1269b08319a7f80029";

    protected ReticulateAuth(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected ReticulateAuth(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public RemoteCall<TransactionReceipt> modifyAccessLevel(String fileId, String user, BigInteger level) {
        Function function = new Function(
                "modifyAccessLevel", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId), 
                new org.web3j.abi.datatypes.Address(user), 
                new org.web3j.abi.datatypes.generated.Uint256(level)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> destruct() {
        Function function = new Function(
                "destruct", 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addFile(String fileId, String name, byte[] key, BigInteger length) {
        Function function = new Function(
                "addFile", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.DynamicBytes(key), 
                new org.web3j.abi.datatypes.generated.Uint256(length)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> revokeShare(String fileId, String revokee) {
        Function function = new Function(
                "revokeShare", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId), 
                new org.web3j.abi.datatypes.Address(revokee)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getAccessLevel(String fileId, String user) {
        Function function = new Function("getAccessLevel", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId), 
                new org.web3j.abi.datatypes.Address(user)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<byte[]> getKeyForFile(String fileId) {
        Function function = new Function("getKeyForFile", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteCall<Tuple2<String, BigInteger>> getFileMeta(String fileId) {
        final Function function = new Function("getFileMeta", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple2<String, BigInteger>>(
                new Callable<Tuple2<String, BigInteger>>() {
                    @Override
                    public Tuple2<String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);;
                        return new Tuple2<String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> shareFile(String fileId, String recipient, byte[] recipientKey, BigInteger level) {
        Function function = new Function(
                "shareFile", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId), 
                new org.web3j.abi.datatypes.Address(recipient), 
                new org.web3j.abi.datatypes.DynamicBytes(recipientKey), 
                new org.web3j.abi.datatypes.generated.Uint256(level)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> removeFile(String fileId) {
        Function function = new Function(
                "removeFile", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(fileId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public static RemoteCall<ReticulateAuth> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(ReticulateAuth.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<ReticulateAuth> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(ReticulateAuth.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static ReticulateAuth load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new ReticulateAuth(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static ReticulateAuth load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new ReticulateAuth(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }
}
